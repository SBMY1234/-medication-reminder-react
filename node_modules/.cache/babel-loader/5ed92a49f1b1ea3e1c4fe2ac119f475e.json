{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\medication-reminder-react\\\\src\\\\Component\\\\ListMedicals.jsx\",\n    _s = $RefreshSig$();\n\nimport Dialog from \"./Dialog\";\nimport \"./ListMedicals.css\";\nimport { Medical } from \"./Medical\";\nimport savedMedicals from \"../Service/savedMedicals\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport allMedical from \"../Service/ListMedical\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ListMedicals = () => {\n  _s();\n\n  const history = useHistory();\n  const [userMedicals, setUserMedicals] = useState([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [currentMedic, setCurrentMedic] = useState(\"\");\n  const [userFirstName, setuserFirst] = useState(\"\");\n  const [userLastName, setuserLast] = useState(\"\");\n  useEffect(() => {\n    console.log(\"get datailssss\");\n    const personData = JSON.parse(localStorage.getItem('personData'));\n    setuserFirst(personData.newFirstName);\n    setuserLast(personData.newLastName);\n    console.log(userFirstName, userLastName);\n  });\n  useEffect(() => {\n    console.log(\"use effect\");\n    setUserMedicals(savedMedicals);\n  }, []);\n\n  function dltFunc(medicId) {\n    console.log(\"**************\");\n    setUserMedicals(userMedicals.filter(medic => medic.id !== medicId));\n  }\n\n  function clsDialog() {\n    console.log(\"8888888888888888888888888\");\n    setIsDialogOpen(false);\n  }\n\n  function openDialog() {\n    setIsDialogOpen(true);\n  }\n\n  function editFunc(medicId) {\n    setCurrentMedic(userMedicals.find(medic => medic.id === medicId).medicName);\n    openDialog();\n  }\n\n  function saveChangesFunc(med) {\n    console.log(\"meddddddddddddddd\", med.name);\n    setUserMedicals([...userMedicals, {\n      medicName: med.name,\n      frequencyDays: med.frequencyDays,\n      lastUpdate: moment(new Date()).format(\"DD/MM/YY\")\n    }]);\n    clsDialog();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"part2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn-\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pratim-\",\n          id: \"details-\",\n          children: \"פרטים אישיים \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-\",\n        children: \"-----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn2-\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn2-\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pratim-\",\n          id: \"list-\",\n          children: \"רשימת תרופות \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-\",\n        id: \"line2-\",\n        children: \"-----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn3-\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn3-\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pratim-\",\n          id: \"okey-\",\n          children: \" אישור ושליחה\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medicList\",\n      id: \"part3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u05E8\\u05E9\\u05D9\\u05DE\\u05EA \\u05D4\\u05EA\\u05E8\\u05D5\\u05E4\\u05D5\\u05EA \\u05E9\\u05DC \", userFirstName, \" \", userLastName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        isDialogOpen: isDialogOpen,\n        saveChanges: med => saveChangesFunc(med),\n        clsDialog: clsDialog,\n        currentName: currentMedic,\n        options: allMedical\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medicalsContainer\",\n        children: userMedicals === null || userMedicals === void 0 ? void 0 : userMedicals.map(medic => /*#__PURE__*/_jsxDEV(Medical, {\n          medic: medic,\n          editMedic: editFunc,\n          dltMedic: dltFunc\n        }, medic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"continueBtn\",\n          onClick: () => history.push(\"/Details\"),\n          children: \"\\u05D7\\u05D6\\u05E8\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"continueBtn\",\n          onClick: () => history.push(\"/Accept\"),\n          children: \"\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListMedicals, \"4WM/d8gpjwDdYbbY1wDd8L7NqqY=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListMedicals;\nexport default ListMedicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMedicals\");","map":{"version":3,"sources":["C:/inetpub/wwwroot/medication-reminder-react/src/Component/ListMedicals.jsx"],"names":["Dialog","Medical","savedMedicals","useEffect","useState","useHistory","moment","allMedical","ListMedicals","history","userMedicals","setUserMedicals","isDialogOpen","setIsDialogOpen","currentMedic","setCurrentMedic","userFirstName","setuserFirst","userLastName","setuserLast","console","log","personData","JSON","parse","localStorage","getItem","newFirstName","newLastName","dltFunc","medicId","filter","medic","id","clsDialog","openDialog","editFunc","find","medicName","saveChangesFunc","med","name","frequencyDays","lastUpdate","Date","format","map","push"],"mappings":"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","sourcesContent":["import Dialog from \"./Dialog\";\r\nimport \"./ListMedicals.css\";\r\nimport { Medical } from \"./Medical\";\r\nimport savedMedicals from \"../Service/savedMedicals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport allMedical from \"../Service/ListMedical\";\r\n\r\n\r\nexport const ListMedicals = () => {\r\n\r\n  const history = useHistory();\r\n  const [userMedicals, setUserMedicals] = useState([]);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [currentMedic, setCurrentMedic] = useState(\"\");\r\n  \r\n  const [userFirstName, setuserFirst] = useState(\"\");\r\n const [userLastName, setuserLast] = useState(\"\");\r\n\r\nuseEffect(() => {  \r\n  console.log(\"get datailssss\");\r\n  const personData = JSON.parse(localStorage.getItem('personData'));\r\n  setuserFirst(personData.newFirstName);\r\n  setuserLast(personData.newLastName)\r\n    \r\n  console.log(userFirstName, userLastName);\r\n}) \r\n  useEffect(() => {\r\n    console.log(\"use effect\");\r\n   \r\n    setUserMedicals(savedMedicals);\r\n  }, []);\r\n  function dltFunc(medicId) {\r\n    console.log(\"**************\");\r\n    setUserMedicals(userMedicals.filter((medic) => medic.id !== medicId));\r\n  }\r\n  function clsDialog() {\r\n    console.log(\"8888888888888888888888888\");\r\n    setIsDialogOpen(false);\r\n  }\r\n  function openDialog() {\r\n    setIsDialogOpen(true);\r\n  }\r\n  function editFunc(medicId) {\r\n    setCurrentMedic(\r\n      userMedicals.find((medic) => medic.id === medicId).medicName\r\n    );\r\n    openDialog();\r\n  }\r\n  function saveChangesFunc(med) {\r\n    console.log(\"meddddddddddddddd\", med.name);\r\n    setUserMedicals([\r\n      ...userMedicals,\r\n      {\r\n        medicName: med.name,\r\n        frequencyDays: med.frequencyDays,\r\n        lastUpdate: moment(new Date()).format(\"DD/MM/YY\")\r\n      },\r\n    ]);\r\n    clsDialog();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"part2\">\r\n        <div id=\"btn-\">\r\n          <button type=\"button\" className=\"btn-\">\r\n            1\r\n          </button>\r\n          <p className=\"pratim-\" id=\"details-\">\r\n            {\"פרטים אישיים \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"line-\">-----</div>\r\n        <div id=\"btn2-\">\r\n          <button type=\"button\" className=\"btn2-\">\r\n            2\r\n          </button>\r\n          <p className=\"pratim-\" id=\"list-\">\r\n            {\"רשימת תרופות \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"line-\" id=\"line2-\">\r\n          -----\r\n        </div>\r\n        <div id=\"btn3-\">\r\n          <button type=\"button\" className=\"btn3-\">\r\n            3\r\n          </button>\r\n          <p className=\"pratim-\" id=\"okey-\">\r\n            {\" אישור ושליחה\"}\r\n          </p>\r\n        </div>\r\n      </div> \r\n\r\n      <div className=\"medicList\" id=\"part3\">\r\n      {/* {personData.newFirstName } {personData.newLastName} */}\r\n        <h1>רשימת התרופות של {userFirstName} {userLastName}:</h1>\r\n        {/* <canvas id=\"myCanvas\" className=\"rec\"></canvas> */}\r\n        {/* <button type=\"button\" className=\"btn4\">\r\n        // הוסף תרופה\r\n      </button> */}\r\n        <Dialog\r\n          isDialogOpen={isDialogOpen}\r\n          saveChanges={(med) => saveChangesFunc(med)}\r\n          clsDialog={clsDialog}\r\n          currentName={currentMedic}\r\n          \r\n          options={allMedical}\r\n        />\r\n         {/* options={userMedicals.map((medic) => medic.medicName)} */}\r\n        <div className=\"medicalsContainer\">\r\n          {userMedicals?.map((medic) => (\r\n            <Medical\r\n              key={medic.id}\r\n              medic={medic}\r\n              editMedic={editFunc}\r\n              dltMedic={dltFunc}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <button className=\"continueBtn\" onClick={() => history.push(\"/Details\")}>\r\n            חזרה\r\n          </button>\r\n          <button className=\"continueBtn\" onClick={() => history.push(\"/Accept\")}>\r\n            אישור\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ListMedicals;\r\n"]},"metadata":{},"sourceType":"module"}