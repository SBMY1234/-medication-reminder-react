{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\medication-reminder-react\\\\src\\\\Component\\\\AddMedical.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport './AddMedical.css'; //התרופות\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddMedical = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false); //הוספת תרופה\n  // const addNewUMadicines=async(e)=> {\n  //     debugger\n  //         e.preventDefault();\n  //     let newM ={\n  //         name:e.target.name.value,\n  //     }\n  //     let NewMadicinesList = await addMedicines(newM)\n  //     console.log( NewMadicinesList)\n\n\n  const allMedical = [\"אקמול\", \"דקסמול\", \"נורופן\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05EA \\u05EA\\u05E8\\u05D5\\u05E4\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => addNewUMadicines(e),\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            className: \"myautocomplate\",\n            disablePortal: true,\n            id: \"medicalName\",\n            options: allMedical,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            height: \"30px\",\n            width: \"70px\",\n            color: \"green\"\n          },\n          children: \"\\u05EA\\u05E8\\u05D5\\u05E4\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddMedical, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AddMedical;\nexport default AddMedical;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMedical\");","map":{"version":3,"sources":["C:/inetpub/wwwroot/medication-reminder-react/src/Component/AddMedical.jsx"],"names":["React","TextField","Autocomplete","Box","Button","Typography","Modal","AddMedical","open","setOpen","useState","handleOpen","handleClose","allMedical","style","e","addNewUMadicines","width","params","height","color"],"mappings":";;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,kBAAP,C,CAIA;;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMC,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMG,WAAW,GAAG,MAAMH,OAAO,CAAC,KAAD,CAAjC,CAH4B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMI,UAAU,GAAG,CACf,OADe,EACN,QADM,EACI,QADJ,CAAnB;AAIA,sBAAO;AAAA,4BAEX,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFW,eAIH,QAAC,KAAD;AACI,MAAA,IAAI,EAAEH,IADV;AAEI,MAAA,OAAO,EAAEI,WAFb;AAGI,yBAAgB,mBAHpB;AAII,0BAAiB,yBAJrB;AAAA,6BAMI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEE,KAAT;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mBAAf;AAAmC,UAAA,OAAO,EAAC,IAA3C;AAAgD,UAAA,SAAS,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKQ;AAAM,UAAA,QAAQ,EAAGC,CAAD,IAAOC,gBAAgB,CAACD,CAAD,CAAvC;AAAA,iCAEI,QAAC,YAAD;AACI,YAAA,SAAS,EAAC,gBADd;AAEI,YAAA,aAAa,MAFjB;AAGI,YAAA,EAAE,EAAC,aAHP;AAII,YAAA,OAAO,EAAEF,UAJb;AAKI,YAAA,EAAE,EAAE;AAAEI,cAAAA,KAAK,EAAE;AAAT,aALR;AAMI,YAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAN7B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALR,eAkBQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,MAAV;AAAkBF,YAAAA,KAAK,EAAE,MAAzB;AAAiCG,YAAAA,KAAK,EAAE;AAAxC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA,kBAAP;AAoCH,CAvDM;;GAAMb,U;;KAAAA,U;AAwDb,eAAeA,UAAf","sourcesContent":["\r\n\r\nimport * as React from 'react';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport './AddMedical.css';\r\n\r\n\r\n\r\n//התרופות\r\nexport const AddMedical = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    //הוספת תרופה\r\n    // const addNewUMadicines=async(e)=> {\r\n    //     debugger\r\n    //         e.preventDefault();\r\n    //     let newM ={\r\n    //         name:e.target.name.value,\r\n    //     }\r\n    //     let NewMadicinesList = await addMedicines(newM)\r\n\r\n    //     console.log( NewMadicinesList)\r\n    const allMedical = [\r\n        \"אקמול\", \"דקסמול\", \"נורופן\"\r\n    ]\r\n\r\n    return <>\r\n\r\n<Button onClick={handleOpen}>Open modal</Button>\r\n\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    הוספת תרופה\r\n                </Typography>\r\n                {/* <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}> */}\r\n                    <form onSubmit={(e) => addNewUMadicines(e)}>\r\n\r\n                        <Autocomplete\r\n                            className='myautocomplate'\r\n                            disablePortal\r\n                            id=\"medicalName\"\r\n                            options={allMedical}\r\n                            sx={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"\" />}\r\n                        />\r\n\r\n                    </form>\r\n\r\n                    <button type='button' style={{ height: \"30px\", width: \"70px\", color: \"green\" }}>תרופה</button>\r\n\r\n\r\n                {/* </Typography> */}\r\n            </Box>\r\n        </Modal>\r\n\r\n    </>\r\n}\r\nexport default AddMedical;"]},"metadata":{},"sourceType":"module"}