{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\medication-reminder-react\\\\src\\\\Component\\\\ListMedicals.jsx\",\n    _s = $RefreshSig$();\n\nimport Dialog from \"./Dialog\";\nimport \"./ListMedicals.css\";\nimport { Medical } from \"./Medical\";\nimport savedMedicals from \"../Service/savedMedicals\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ListMedicals = () => {\n  _s();\n\n  const history = useHistory();\n  const [userMedicals, setUserMedicals] = useState([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [currentMedic, setCurrentMedic] = useState(\"\");\n  useEffect(() => {\n    console.log(\"use effect\");\n    setUserMedicals(savedMedicals);\n  }, []);\n\n  function dltFunc(medicId) {\n    console.log(\"**************\");\n    setUserMedicals(userMedicals.filter(medic => medic.id !== medicId));\n  }\n\n  function clsDialog() {\n    console.log(\"8888888888888888888888888\");\n    setIsDialogOpen(false);\n  }\n\n  function openDialog() {\n    setIsDialogOpen(true);\n  }\n\n  function editFunc(medicId) {\n    setCurrentMedic(userMedicals.find(medic => medic.id === medicId).medicName);\n    openDialog();\n  }\n\n  function saveChangesFunc(med) {\n    console.log(\"meddddddddddddddd\", med.name);\n    setUserMedicals([...userMedicals, {\n      medicName: med.name,\n      frequencyDays: med.frequencyDays,\n      lastUpdate: Date.now()\n    }]);\n    clsDialog();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medicList\",\n      id: \"part3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u05E8\\u05E9\\u05D9\\u05DE\\u05EA \\u05D4\\u05EA\\u05E8\\u05D5\\u05E4\\u05D5\\u05EA \\u05E9\\u05DC \\u05E9\\u05DE\\u05D5\\u05D0\\u05DC \\u05E9\\u05DE\\u05D5\\u05D0\\u05DC\\u05D9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        isDialogOpen: isDialogOpen,\n        saveChanges: med => saveChangesFunc(med),\n        clsDialog: clsDialog,\n        currentName: currentMedic,\n        options: userMedicals.map(medic => medic.medicName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medicalsContainer\",\n        children: userMedicals === null || userMedicals === void 0 ? void 0 : userMedicals.map(medic => /*#__PURE__*/_jsxDEV(Medical, {\n          medic: medic,\n          editMedic: editFunc,\n          dltMedic: dltFunc\n        }, medic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"continueBtn\",\n          onClick: () => history.push(\"/Details\"),\n          children: \"\\u05D7\\u05D6\\u05E8\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"continueBtn\",\n          onClick: () => history.push(\"/Accept\"),\n          children: \"\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ListMedicals, \"wOlmG+qvGKyzbqfNE4vQJLJL1+s=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListMedicals;\nexport default ListMedicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMedicals\");","map":{"version":3,"sources":["C:/inetpub/wwwroot/medication-reminder-react/src/Component/ListMedicals.jsx"],"names":["Dialog","Medical","savedMedicals","useEffect","useState","useHistory","ListMedicals","history","userMedicals","setUserMedicals","isDialogOpen","setIsDialogOpen","currentMedic","setCurrentMedic","console","log","dltFunc","medicId","filter","medic","id","clsDialog","openDialog","editFunc","find","medicName","saveChangesFunc","med","name","frequencyDays","lastUpdate","Date","now","map","push"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAN,IAAAA,eAAe,CAACP,aAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,WAASc,OAAT,CAAiBC,OAAjB,EAA0B;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAN,IAAAA,eAAe,CAACD,YAAY,CAACU,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaH,OAA5C,CAAD,CAAf;AACD;;AACD,WAASI,SAAT,GAAqB;AACnBP,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AACD,WAASW,UAAT,GAAsB;AACpBX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACD,WAASY,QAAT,CAAkBN,OAAlB,EAA2B;AACzBJ,IAAAA,eAAe,CACbL,YAAY,CAACgB,IAAb,CAAmBL,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaH,OAA1C,EAAmDQ,SADtC,CAAf;AAGAH,IAAAA,UAAU;AACX;;AACD,WAASI,eAAT,CAAyBC,GAAzB,EAA8B;AAC5Bb,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCY,GAAG,CAACC,IAArC;AACAnB,IAAAA,eAAe,CAAC,CACd,GAAGD,YADW,EAEd;AACEiB,MAAAA,SAAS,EAAEE,GAAG,CAACC,IADjB;AAEEC,MAAAA,aAAa,EAAEF,GAAG,CAACE,aAFrB;AAGEC,MAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHd,KAFc,CAAD,CAAf;AAQAX,IAAAA,SAAS;AACV;;AAED,sBACE;AAAA,2BAiCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,OAA9B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,YAAY,EAAEX,YADhB;AAEE,QAAA,WAAW,EAAGiB,GAAD,IAASD,eAAe,CAACC,GAAD,CAFvC;AAGE,QAAA,SAAS,EAAEN,SAHb;AAIE,QAAA,WAAW,EAAET,YAJf;AAKE,QAAA,OAAO,EAAEJ,YAAY,CAACyB,GAAb,CAAkBd,KAAD,IAAWA,KAAK,CAACM,SAAlC;AALX;AAAA;AAAA;AAAA;AAAA,cANF,eAaE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGjB,YADH,aACGA,YADH,uBACGA,YAAY,CAAEyB,GAAd,CAAmBd,KAAD,iBACjB,QAAC,OAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,SAAS,EAAEI,QAHb;AAIE,UAAA,QAAQ,EAAEP;AAJZ,WACOG,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbF,eAuBE;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAMb,OAAO,CAAC2B,IAAR,CAAa,UAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAM3B,OAAO,CAAC2B,IAAR,CAAa,SAAb,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCF,mBADF;AAoED,CA3GM;;GAAM5B,Y;UACKD,U;;;KADLC,Y;AA4Gb,eAAeA,YAAf","sourcesContent":["import Dialog from \"./Dialog\";\r\nimport \"./ListMedicals.css\";\r\nimport { Medical } from \"./Medical\";\r\nimport savedMedicals from \"../Service/savedMedicals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ListMedicals = () => {\r\n  const history = useHistory();\r\n  const [userMedicals, setUserMedicals] = useState([]);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [currentMedic, setCurrentMedic] = useState(\"\");\r\n  useEffect(() => {\r\n    console.log(\"use effect\");\r\n    setUserMedicals(savedMedicals);\r\n  }, []);\r\n  function dltFunc(medicId) {\r\n    console.log(\"**************\");\r\n    setUserMedicals(userMedicals.filter((medic) => medic.id !== medicId));\r\n  }\r\n  function clsDialog() {\r\n    console.log(\"8888888888888888888888888\");\r\n    setIsDialogOpen(false);\r\n  }\r\n  function openDialog() {\r\n    setIsDialogOpen(true);\r\n  }\r\n  function editFunc(medicId) {\r\n    setCurrentMedic(\r\n      userMedicals.find((medic) => medic.id === medicId).medicName\r\n    );\r\n    openDialog();\r\n  }\r\n  function saveChangesFunc(med) {\r\n    console.log(\"meddddddddddddddd\", med.name);\r\n    setUserMedicals([\r\n      ...userMedicals,\r\n      {\r\n        medicName: med.name,\r\n        frequencyDays: med.frequencyDays,\r\n        lastUpdate: Date.now(),\r\n      },\r\n    ]);\r\n    clsDialog();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div id=\"part2\">\r\n        <div id=\"btn\">\r\n          <button type=\"button\" className=\"btn\">\r\n            1\r\n          </button>\r\n          <p className=\"pratim\" id=\"details\">\r\n            {\"פרטים אישיים \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"line\">-------</div>\r\n        <div id=\"btn2\">\r\n          <button type=\"button\" className=\"btn2\">\r\n            2\r\n          </button>\r\n          <p className=\"pratim\" id=\"list\">\r\n            {\"רשימת תרופות \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"line\" id=\"line2\">\r\n          -------\r\n        </div>\r\n        <div id=\"btn3\">\r\n          <button type=\"button\" className=\"btn3\">\r\n            3\r\n          </button>\r\n          <p className=\"pratim\" id=\"okey\">\r\n            {\" אישור ושליחה\"}\r\n          </p>\r\n        </div>\r\n      </div> */}\r\n\r\n      {/* <HorizontalLabelPositionBelowStepper></HorizontalLabelPositionBelowStepper> */}\r\n      <div className=\"medicList\" id=\"part3\">\r\n        <h1>רשימת התרופות של שמואל שמואלי:</h1>\r\n        {/* <canvas id=\"myCanvas\" className=\"rec\"></canvas> */}\r\n        {/* <button type=\"button\" className=\"btn4\">\r\n        // הוסף תרופה\r\n      </button> */}\r\n        <Dialog\r\n          isDialogOpen={isDialogOpen}\r\n          saveChanges={(med) => saveChangesFunc(med)}\r\n          clsDialog={clsDialog}\r\n          currentName={currentMedic}\r\n          options={userMedicals.map((medic) => medic.medicName)}\r\n        />\r\n        <div className=\"medicalsContainer\">\r\n          {userMedicals?.map((medic) => (\r\n            <Medical\r\n              key={medic.id}\r\n              medic={medic}\r\n              editMedic={editFunc}\r\n              dltMedic={dltFunc}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div>\r\n        <button className=\"continueBtn\" onClick={() => history.push(\"/Details\")}>\r\n          חזרה\r\n        </button>\r\n        <button className=\"continueBtn\" onClick={() => history.push(\"/Accept\")}>\r\n          אישור\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ListMedicals;\r\n"]},"metadata":{},"sourceType":"module"}